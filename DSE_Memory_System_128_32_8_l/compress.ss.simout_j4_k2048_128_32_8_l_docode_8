sim-outorder: SimpleScalar/PISA Tool Set version 3.0 of August, 2003.
Copyright (c) 1994-2003 by Todd M. Austin, Ph.D. and SimpleScalar, LLC.
All Rights Reserved. This version of SimpleScalar is licensed for academic
non-commercial use.  No portion of this work may be used by any commercial
entity, or for any commercial purpose, without the prior written permission
of SimpleScalar, LLC (info@simplescalar.com).


Processor Parameters:
Issue Width: 4
Window Size: 8
Number of Virtual Registers: 32
Number of Physical Registers: 8
Datapath Width: 64
Total Power Consumption: 76.353
Branch Predictor Power Consumption: 4.52313  (6.08%)
 branch target buffer power (W): 4.16837
 local predict power (W): 0.0879711
 global predict power (W): 0.0996078
 chooser power (W): 0.0702439
 RAS power (W): 0.0969383
Rename Logic Power Consumption: 0.351534  (0.473%)
 Instruction Decode Power (W): 0.0159915
 RAT decode_power (W): 0.113514
 RAT wordline_power (W): 0.0260431
 RAT bitline_power (W): 0.185078
 DCL Comparators (W): 0.0109075
Instruction Window Power Consumption: 1.38003  (1.86%)
 tagdrive (W): 0.0465589
 tagmatch (W): 0.0135476
 Selection Logic (W): 0.00805301
 decode_power (W): 0.0239873
 wordline_power (W): 0.0844643
 bitline_power (W): 1.20342
Load/Store Queue Power Consumption: 0.855275  (1.15%)
 tagdrive (W): 0.457232
 tagmatch (W): 0.100774
 decode_power (W): 0.00799577
 wordline_power (W): 0.0150119
 bitline_power (W): 0.274261
Arch. Register File Power Consumption: 3.57247  (4.8%)
 decode_power (W): 0.113514
 wordline_power (W): 0.0844643
 bitline_power (W): 3.37449
Result Bus Power Consumption: 2.05965  (2.77%)
Total Clock Power: 27.2819  (36.7%)
Int ALU Power: 4.66013  (6.27%)
FP ALU Power: 14.281  (19.2%)
Instruction Cache Power Consumption: 2.21363  (2.98%)
 decode_power (W): 0.779481
 wordline_power (W): 0.028656
 bitline_power (W): 0.886372
 senseamp_power (W): 0.096
 tagarray_power (W): 0.423116
Itlb_power (W): 0.263317 (0.354%)
Data Cache Power Consumption: 7.7999  (10.5%)
 decode_power (W): 0.724888
 wordline_power (W): 0.180479
 bitline_power (W): 4.58765
 senseamp_power (W): 0.768
 tagarray_power (W): 1.53888
Dtlb_power (W): 0.901877 (1.21%)
Level 2 Cache Power Consumption: 4.2091 (5.66%)
 decode_power (W): 0.41817
 wordline_power (W): 0.0430878
 bitline_power (W): 3.0244
 senseamp_power (W): 0.192
 tagarray_power (W): 0.531433
sim: command line: /home/passionguan/Downloads/Computer_Architecture_Course/Homework_3/hw3_simplescalar_archive/sim-wattch-1.02e/sim-outorder -config ruu_size_8.cfg ./compress.ss 

sim: simulation started @ Mon Oct 17 02:40:25 2016, options follow:

sim-outorder: This simulator implements a very detailed out-of-order issue
superscalar processor with a two-level memory system and speculative
execution support.  This simulator is a performance simulator, tracking the
latency of all pipeline operations.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim           <null> # redirect simulator output to file (non-interactive only)
# -redir:prog          <null> # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-max:inst                   0 # maximum number of inst's to execute
-fastfwd                    0 # number of insts skipped before timing starts
# -ptrace              <null> # generate pipetrace, i.e., <fname|stdout|stderr> <range>
-fetch:ifqsize              4 # instruction fetch queue size (in insts)
-fetch:mplat                3 # extra branch mis-prediction latency
-fetch:speed                1 # speed of front-end of machine relative to execution core
-bpred                  bimod # branch predictor type {nottaken|taken|perfect|bimod|2lev|comb}
-bpred:bimod     2048 # bimodal predictor config (<table size>)
-bpred:2lev      1 1024 8 0 # 2-level predictor config (<l1size> <l2size> <hist_size> <xor>)
-bpred:comb      1024 # combining predictor config (<meta_table_size>)
-bpred:ras                  8 # return address stack size (0 for no return stack)
-bpred:btb       512 4 # BTB config (<num_sets> <associativity>)
# -bpred:spec_update       <null> # speculative predictors update in {ID|WB} (default non-spec)
-decode:width               4 # instruction decode B/W (insts/cycle)
-issue:width                4 # instruction issue B/W (insts/cycle)
-issue:inorder          false # run pipeline with in-order issue
-issue:wrongpath         true # issue instructions down wrong execution paths
-commit:width               4 # instruction commit B/W (insts/cycle)
-ruu:size                   8 # register update unit (RUU) size
-lsq:size                   8 # load/store queue (LSQ) size
-cache:dl1       dl1:128:32:8:l # l1 data cache config, i.e., {<config>|none}
-cache:dl1lat               1 # l1 data cache hit latency (in cycles)
-cache:dl2       ul2:1024:64:4:l # l2 data cache config, i.e., {<config>|none}
-cache:dl2lat               6 # l2 data cache hit latency (in cycles)
-cache:il1       il1:512:32:1:l # l1 inst cache config, i.e., {<config>|dl1|dl2|none}
-cache:il1lat               1 # l1 instruction cache hit latency (in cycles)
-cache:il2                dl2 # l2 instruction cache config, i.e., {<config>|dl2|none}
-cache:il2lat               6 # l2 instruction cache hit latency (in cycles)
-cache:flush            false # flush caches on system calls
-cache:icompress        false # convert 64-bit inst addresses to 32-bit inst equivalents
-mem:lat         18 2 # memory access latency (<first_chunk> <inter_chunk>)
-mem:width                  8 # memory access bus width (in bytes)
-tlb:itlb        itlb:16:4096:4:l # instruction TLB config, i.e., {<config>|none}
-tlb:dtlb        dtlb:32:4096:4:l # data TLB config, i.e., {<config>|none}
-tlb:lat                   30 # inst/data TLB miss latency (in cycles)
-res:ialu                   4 # total number of integer ALU's available
-res:imult                  1 # total number of integer multiplier/dividers available
-res:memport                2 # total number of memory system ports available (to CPU)
-res:fpalu                  4 # total number of floating point ALU's available
-res:fpmult                 1 # total number of floating point multiplier/dividers available
# -pcstat              <null> # profile stat(s) against text addr's (mult uses ok)
-bugcompat              false # operate in backward-compatible bugs mode (for testing only)

  Pipetrace range arguments are formatted as follows:

    {{@|#}<start>}:{{@|#|+}<end>}

  Both ends of the range are optional, if neither are specified, the entire
  execution is traced.  Ranges that start with a `@' designate an address
  range to be traced, those that start with an `#' designate a cycle count
  range.  All other range values represent an instruction count range.  The
  second argument, if specified with a `+', indicates a value relative
  to the first argument, e.g., 1000:+100 == 1000:1100.  Program symbols may
  be used in all contexts.

    Examples:   -ptrace FOO.trc #0:#1000
                -ptrace BAR.trc @2000:
                -ptrace BLAH.trc :1500
                -ptrace UXXE.trc :
                -ptrace FOOBAR.trc @main:+278

  Branch predictor configuration examples for 2-level predictor:
    Configurations:   N, M, W, X
      N   # entries in first level (# of shift register(s))
      W   width of shift register(s)
      M   # entries in 2nd level (# of counters, or other FSM)
      X   (yes-1/no-0) xor history and address for 2nd level index
    Sample predictors:
      GAg     : 1, W, 2^W, 0
      GAp     : 1, W, M (M > 2^W), 0
      PAg     : N, W, 2^W, 0
      PAp     : N, W, M (M == 2^(N+W)), 0
      gshare  : 1, W, 2^W, 1
  Predictor `comb' combines a bimodal and a 2-level predictor.

  The cache config parameter <config> has the following format:

    <name>:<nsets>:<bsize>:<assoc>:<repl>

    <name>   - name of the cache being defined
    <nsets>  - number of sets in the cache
    <bsize>  - block size of the cache
    <assoc>  - associativity of the cache
    <repl>   - block replacement strategy, 'l'-LRU, 'f'-FIFO, 'r'-random

    Examples:   -cache:dl1 dl1:4096:32:1:l
                -dtlb dtlb:128:4096:32:r

  Cache levels can be unified by pointing a level of the instruction cache
  hierarchy at the data cache hiearchy using the "dl1" and "dl2" cache
  configuration arguments.  Most sensible combinations are supported, e.g.,

    A unified l2 cache (il2 is pointed at dl2):
      -cache:il1 il1:128:64:1:l -cache:il2 dl2
      -cache:dl1 dl1:256:32:1:l -cache:dl2 ul2:1024:64:2:l

    Or, a fully unified cache hierarchy (il1 pointed at dl1):
      -cache:il1 dl1
      -cache:dl1 ul1:256:32:1:l -cache:dl2 ul2:1024:64:2:l



sim: ** starting performance simulation **

sim: ** simulation statistics **
sim_num_insn                3520493 # total number of instructions committed
sim_num_refs                2152774 # total number of loads and stores committed
sim_num_loads                264260 # total number of loads committed
sim_num_stores         1888514.0000 # total number of stores committed
sim_num_branches             338527 # total number of branches committed
sim_elapsed_time                  2 # total simulation time in seconds
sim_inst_rate          1760246.5000 # simulation speed (in insts/sec)
sim_total_insn              3560520 # total number of instructions executed
sim_total_refs              2168606 # total number of loads and stores executed
sim_total_loads              276808 # total number of loads executed
sim_total_stores       1891798.0000 # total number of stores executed
sim_total_branches           344634 # total number of branches executed
sim_cycle                   2241005 # total simulation time in cycles
sim_IPC                      1.5709 # instructions per cycle
sim_CPI                      0.6366 # cycles per instruction
sim_exec_BW                  1.5888 # total instructions (mis-spec + committed) per cycle
sim_IPB                     10.3994 # instruction per branch
IFQ_count                   7895586 # cumulative IFQ occupancy
IFQ_fcount                  1907411 # cumulative IFQ full count
ifq_occupancy                3.5232 # avg IFQ occupancy (insn's)
ifq_rate                     1.5888 # avg IFQ dispatch rate (insn/cycle)
ifq_latency                  2.2175 # avg IFQ occupant latency (cycle's)
ifq_full                     0.8511 # fraction of time (cycle's) IFQ was full
RUU_count                  16151540 # cumulative RUU occupancy
RUU_fcount                  1966236 # cumulative RUU full count
ruu_occupancy                7.2073 # avg RUU occupancy (insn's)
ruu_rate                     1.5888 # avg RUU dispatch rate (insn/cycle)
ruu_latency                  4.5363 # avg RUU occupant latency (cycle's)
ruu_full                     0.8774 # fraction of time (cycle's) RUU was full
LSQ_count                   8985025 # cumulative LSQ occupancy
LSQ_fcount                   432147 # cumulative LSQ full count
lsq_occupancy                4.0094 # avg LSQ occupancy (insn's)
lsq_rate                     1.5888 # avg LSQ dispatch rate (insn/cycle)
lsq_latency                  2.5235 # avg LSQ occupant latency (cycle's)
lsq_full                     0.1928 # fraction of time (cycle's) LSQ was full
sim_slip                   30688738 # total number of slip cycles
avg_sim_slip                 8.7172 # the average slip between issue and retirement
bpred_bimod.lookups          351185 # total number of bpred lookups
bpred_bimod.updates          338527 # total number of updates
bpred_bimod.addr_hits        327953 # total number of address-predicted hits
bpred_bimod.dir_hits         328272 # total number of direction-predicted hits (includes addr-hits)
bpred_bimod.misses            10255 # total number of misses
bpred_bimod.jr_hits           23847 # total number of address-predicted hits for JR's
bpred_bimod.jr_seen           23986 # total number of JR's seen
bpred_bimod.jr_non_ras_hits.PP           63 # total number of address-predicted hits for non-RAS JR's
bpred_bimod.jr_non_ras_seen.PP          188 # total number of non-RAS JR's seen
bpred_bimod.bpred_addr_rate    0.9688 # branch address-prediction rate (i.e., addr-hits/updates)
bpred_bimod.bpred_dir_rate    0.9697 # branch direction-prediction rate (i.e., all-hits/updates)
bpred_bimod.bpred_jr_rate    0.9942 # JR address-prediction rate (i.e., JR addr-hits/JRs seen)
bpred_bimod.bpred_jr_non_ras_rate.PP    0.3351 # non-RAS JR addr-pred rate (ie, non-RAS JR hits/JRs seen)
bpred_bimod.retstack_pushes        26477 # total number of address pushed onto ret-addr stack
bpred_bimod.retstack_pops        24624 # total number of address popped off of ret-addr stack
bpred_bimod.used_ras.PP        23798 # total number of RAS predictions used
bpred_bimod.ras_hits.PP        23784 # total number of RAS hits
bpred_bimod.ras_rate.PP    0.9994 # RAS prediction rate (i.e., RAS hits/used RAS)
il1.accesses                3608895 # total number of accesses
il1.hits                    3596076 # total number of hits
il1.misses                    12819 # total number of misses
il1.replacements              12357 # total number of replacements
il1.writebacks                    0 # total number of writebacks
il1.invalidations                 0 # total number of invalidations
il1.miss_rate                0.0036 # miss rate (i.e., misses/ref)
il1.repl_rate                0.0034 # replacement rate (i.e., repls/ref)
il1.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
il1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl1.accesses                2154508 # total number of accesses
dl1.hits                    1922029 # total number of hits
dl1.misses                   232479 # total number of misses
dl1.replacements             231455 # total number of replacements
dl1.writebacks               228501 # total number of writebacks
dl1.invalidations                 0 # total number of invalidations
dl1.miss_rate                0.1079 # miss rate (i.e., misses/ref)
dl1.repl_rate                0.1074 # replacement rate (i.e., repls/ref)
dl1.wb_rate                  0.1061 # writeback rate (i.e., wrbks/ref)
dl1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
ul2.accesses                 473799 # total number of accesses
ul2.hits                     413695 # total number of hits
ul2.misses                    60104 # total number of misses
ul2.replacements              56008 # total number of replacements
ul2.writebacks                50143 # total number of writebacks
ul2.invalidations                 0 # total number of invalidations
ul2.miss_rate                0.1269 # miss rate (i.e., misses/ref)
ul2.repl_rate                0.1182 # replacement rate (i.e., repls/ref)
ul2.wb_rate                  0.1058 # writeback rate (i.e., wrbks/ref)
ul2.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
itlb.accesses               3608895 # total number of accesses
itlb.hits                   3608875 # total number of hits
itlb.misses                      20 # total number of misses
itlb.replacements                 0 # total number of replacements
itlb.writebacks                   0 # total number of writebacks
itlb.invalidations                0 # total number of invalidations
itlb.miss_rate               0.0000 # miss rate (i.e., misses/ref)
itlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
itlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
itlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
dtlb.accesses               2155462 # total number of accesses
dtlb.hits                   2155247 # total number of hits
dtlb.misses                     215 # total number of misses
dtlb.replacements                88 # total number of replacements
dtlb.writebacks                   0 # total number of writebacks
dtlb.invalidations                0 # total number of invalidations
dtlb.miss_rate               0.0001 # miss rate (i.e., misses/ref)
dtlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
dtlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
dtlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
rename_power            787790.3530 # total power usage of rename unit
bpred_power            10136348.8691 # total power usage of bpred unit
window_power           3092660.2394 # total power usage of instruction window
lsq_power              1916675.0067 # total power usage of load/store queue
regfile_power          8005927.8508 # total power usage of arch. regfile
icache_power           5550838.8154 # total power usage of icache
dcache_power           19500728.9473 # total power usage of dcache
dcache2_power          9432603.9366 # total power usage of dcache2
alu_power              42447268.7803 # total power usage of alu
falu_power             32003893.1278 # total power usage of falu
resultbus_power        4615677.8579 # total power usage of resultbus
clock_power            61138927.9764 # total power usage of clock
avg_rename_power             0.3515 # avg power usage of rename unit
avg_bpred_power              4.5231 # avg power usage of bpred unit
avg_window_power             1.3800 # avg power usage of instruction window
avg_lsq_power                0.8553 # avg power usage of lsq
avg_regfile_power            3.5725 # avg power usage of arch. regfile
avg_icache_power             2.4769 # avg power usage of icache
avg_dcache_power             8.7018 # avg power usage of dcache
avg_dcache2_power            4.2091 # avg power usage of dcache2
avg_alu_power               18.9412 # avg power usage of alu
avg_falu_power              14.2810 # avg power usage of falu
avg_resultbus_power          2.0596 # avg power usage of resultbus
avg_clock_power             27.2819 # avg power usage of clock
fetch_stage_power      15687187.6845 # total power usage of fetch stage
dispatch_stage_power    787790.3530 # total power usage of dispatch stage
issue_stage_power      81005614.7682 # total power usage of issue stage
avg_fetch_power              7.0001 # average power of fetch unit per cycle
avg_dispatch_power           0.3515 # average power of dispatch unit per cycle
avg_issue_power             36.1470 # average power of issue unit per cycle
total_power            166625448.6329 # total power per cycle
avg_total_power_cycle       74.3530 # average total power per cycle
avg_total_power_cycle_nofp_nod2      55.8629 # average total power per cycle
avg_total_power_insn        46.7981 # average total power per insn
avg_total_power_insn_nofp_nod2      35.1603 # average total power per insn
rename_power_cc1        566019.6023 # total power usage of rename unit_cc1
bpred_power_cc1        1434789.9703 # total power usage of bpred unit_cc1
window_power_cc1       2018838.5072 # total power usage of instruction window_cc1
lsq_power_cc1           413996.5363 # total power usage of lsq_cc1
regfile_power_cc1      4233853.3181 # total power usage of arch. regfile_cc1
icache_power_cc1       4059363.2105 # total power usage of icache_cc1
dcache_power_cc1       10317724.7778 # total power usage of dcache_cc1
dcache2_power_cc1      1032337.4805 # total power usage of dcache2_cc1
alu_power_cc1          8411640.8523 # total power usage of alu_cc1
resultbus_power_cc1    3008820.9444 # total power usage of resultbus_cc1
clock_power_cc1        17823953.9202 # total power usage of clock_cc1
avg_rename_power_cc1         0.2526 # avg power usage of rename unit_cc1
avg_bpred_power_cc1          0.6402 # avg power usage of bpred unit_cc1
avg_window_power_cc1         0.9009 # avg power usage of instruction window_cc1
avg_lsq_power_cc1            0.1847 # avg power usage of lsq_cc1
avg_regfile_power_cc1        1.8893 # avg power usage of arch. regfile_cc1
avg_icache_power_cc1         1.8114 # avg power usage of icache_cc1
avg_dcache_power_cc1         4.6041 # avg power usage of dcache_cc1
avg_dcache2_power_cc1        0.4607 # avg power usage of dcache2_cc1
avg_alu_power_cc1            3.7535 # avg power usage of alu_cc1
avg_resultbus_power_cc1       1.3426 # avg power usage of resultbus_cc1
avg_clock_power_cc1          7.9536 # avg power usage of clock_cc1
fetch_stage_power_cc1  5494153.1808 # total power usage of fetch stage_cc1
dispatch_stage_power_cc1  566019.6023 # total power usage of dispatch stage_cc1
issue_stage_power_cc1  25203359.0985 # total power usage of issue stage_cc1
avg_fetch_power_cc1          2.4516 # average power of fetch unit per cycle_cc1
avg_dispatch_power_cc1       0.2526 # average power of dispatch unit per cycle_cc1
avg_issue_power_cc1         11.2465 # average power of issue unit per cycle_cc1
total_power_cycle_cc1  53321339.1200 # total power per cycle_cc1
avg_total_power_cycle_cc1      23.7935 # average total power per cycle_cc1
avg_total_power_insn_cc1      14.9757 # average total power per insn_cc1
rename_power_cc2        312884.6887 # total power usage of rename unit_cc2
bpred_power_cc2         765600.2047 # total power usage of bpred unit_cc2
window_power_cc2       1486140.9081 # total power usage of instruction window_cc2
lsq_power_cc2           316735.3372 # total power usage of lsq_cc2
regfile_power_cc2      1556222.2969 # total power usage of arch. regfile_cc2
icache_power_cc2       4059363.2105 # total power usage of icache_cc2
dcache_power_cc2       9374025.6100 # total power usage of dcache_cc2
dcache2_power_cc2       997132.6062 # total power usage of dcache2_cc2
alu_power_cc2          4201452.0048 # total power usage of alu_cc2
resultbus_power_cc2    1517850.1878 # total power usage of resultbus_cc2
clock_power_cc2        11397512.3020 # total power usage of clock_cc2
avg_rename_power_cc2         0.1396 # avg power usage of rename unit_cc2
avg_bpred_power_cc2          0.3416 # avg power usage of bpred unit_cc2
avg_window_power_cc2         0.6632 # avg power usage of instruction window_cc2
avg_lsq_power_cc2            0.1413 # avg power usage of instruction lsq_cc2
avg_regfile_power_cc2        0.6944 # avg power usage of arch. regfile_cc2
avg_icache_power_cc2         1.8114 # avg power usage of icache_cc2
avg_dcache_power_cc2         4.1830 # avg power usage of dcache_cc2
avg_dcache2_power_cc2        0.4449 # avg power usage of dcache2_cc2
avg_alu_power_cc2            1.8748 # avg power usage of alu_cc2
avg_resultbus_power_cc2       0.6773 # avg power usage of resultbus_cc2
avg_clock_power_cc2          5.0859 # avg power usage of clock_cc2
fetch_stage_power_cc2  4824963.4152 # total power usage of fetch stage_cc2
dispatch_stage_power_cc2  312884.6887 # total power usage of dispatch stage_cc2
issue_stage_power_cc2  17893336.6541 # total power usage of issue stage_cc2
avg_fetch_power_cc2          2.1530 # average power of fetch unit per cycle_cc2
avg_dispatch_power_cc2       0.1396 # average power of dispatch unit per cycle_cc2
avg_issue_power_cc2          7.9845 # average power of issue unit per cycle_cc2
total_power_cycle_cc2  35984919.3570 # total power per cycle_cc2
avg_total_power_cycle_cc2      16.0575 # average total power per cycle_cc2
avg_total_power_insn_cc2      10.1066 # average total power per insn_cc2
rename_power_cc3        335061.7638 # total power usage of rename unit_cc3
bpred_power_cc3        1635830.2739 # total power usage of bpred unit_cc3
window_power_cc3       1538980.5088 # total power usage of instruction window_cc3
lsq_power_cc3           464726.8741 # total power usage of lsq_cc3
regfile_power_cc3      1772826.9966 # total power usage of arch. regfile_cc3
icache_power_cc3       4208510.7710 # total power usage of icache_cc3
dcache_power_cc3       10302075.4995 # total power usage of dcache_cc3
dcache2_power_cc3      1837204.0787 # total power usage of dcache2_cc3
alu_power_cc3          7605014.7979 # total power usage of alu_cc3
resultbus_power_cc3    1625551.9811 # total power usage of resultbus_cc3
clock_power_cc3        15618449.5697 # total power usage of clock_cc3
avg_rename_power_cc3         0.1495 # avg power usage of rename unit_cc3
avg_bpred_power_cc3          0.7300 # avg power usage of bpred unit_cc3
avg_window_power_cc3         0.6867 # avg power usage of instruction window_cc3
avg_lsq_power_cc3            0.2074 # avg power usage of instruction lsq_cc3
avg_regfile_power_cc3        0.7911 # avg power usage of arch. regfile_cc3
avg_icache_power_cc3         1.8780 # avg power usage of icache_cc3
avg_dcache_power_cc3         4.5971 # avg power usage of dcache_cc3
avg_dcache2_power_cc3        0.8198 # avg power usage of dcache2_cc3
avg_alu_power_cc3            3.3936 # avg power usage of alu_cc3
avg_resultbus_power_cc3       0.7254 # avg power usage of resultbus_cc3
avg_clock_power_cc3          6.9694 # avg power usage of clock_cc3
fetch_stage_power_cc3  5844341.0449 # total power usage of fetch stage_cc3
dispatch_stage_power_cc3  335061.7638 # total power usage of dispatch stage_cc3
issue_stage_power_cc3  23373553.7400 # total power usage of issue stage_cc3
avg_fetch_power_cc3          2.6079 # average power of fetch unit per cycle_cc3
avg_dispatch_power_cc3       0.1495 # average power of dispatch unit per cycle_cc3
avg_issue_power_cc3         10.4299 # average power of issue unit per cycle_cc3
total_power_cycle_cc3  46944233.1150 # total power per cycle_cc3
avg_total_power_cycle_cc3      20.9478 # average total power per cycle_cc3
avg_total_power_insn_cc3      13.1847 # average total power per insn_cc3
total_rename_access         3560217 # total number accesses of rename unit
total_bpred_access           338527 # total number accesses of bpred unit
total_window_access        13482830 # total number accesses of instruction window
total_lsq_access            2156455 # total number accesses of load/store queue
total_regfile_access        7776321 # total number accesses of arch. regfile
total_icache_access         3609282 # total number accesses of icache
total_dcache_access         2154508 # total number accesses of dcache
total_dcache2_access         473799 # total number accesses of dcache2
total_alu_access            3501732 # total number accesses of alu
total_resultbus_access      3463626 # total number accesses of resultbus
avg_rename_access            1.5887 # avg number accesses of rename unit
avg_bpred_access             0.1511 # avg number accesses of bpred unit
avg_window_access            6.0164 # avg number accesses of instruction window
avg_lsq_access               0.9623 # avg number accesses of lsq
avg_regfile_access           3.4700 # avg number accesses of arch. regfile
avg_icache_access            1.6106 # avg number accesses of icache
avg_dcache_access            0.9614 # avg number accesses of dcache
avg_dcache2_access           0.2114 # avg number accesses of dcache2
avg_alu_access               1.5626 # avg number accesses of alu
avg_resultbus_access         1.5456 # avg number accesses of resultbus
max_rename_access                 4 # max number accesses of rename unit
max_bpred_access                  3 # max number accesses of bpred unit
max_window_access                14 # max number accesses of instruction window
max_lsq_access                    5 # max number accesses of load/store queue
max_regfile_access               12 # max number accesses of arch. regfile
max_icache_access                 4 # max number accesses of icache
max_dcache_access                 4 # max number accesses of dcache
max_dcache2_access                4 # max number accesses of dcache2
max_alu_access                    4 # max number accesses of alu
max_resultbus_access              7 # max number accesses of resultbus
max_cycle_power_cc1         44.3863 # maximum cycle power usage of cc1
max_cycle_power_cc2         33.3578 # maximum cycle power usage of cc2
max_cycle_power_cc3         36.9252 # maximum cycle power usage of cc3
sim_invalid_addrs                 0 # total non-speculative bogus addresses seen (debug var)
ld_text_base             0x00400000 # program text (code) segment base
ld_text_size                 103840 # program text (code) size in bytes
ld_data_base             0x10000000 # program initialized data segment base
ld_data_size               44123012 # program init'ed `.data' and uninit'ed `.bss' size in bytes
ld_stack_base            0x7fffc000 # program stack segment base (highest address in stack)
ld_stack_size                 16384 # program initial stack size
ld_prog_entry            0x00400140 # program entry point (initial PC)
ld_environ_base          0x7fff8000 # program environment base address address
ld_target_big_endian              0 # target executable endian-ness, non-zero if big endian
mem.page_count                  167 # total number of pages allocated
mem.page_mem                   668k # total size of memory pages allocated
mem.ptab_misses                 167 # total first level page table misses
mem.ptab_accesses          32426930 # total page table accesses
mem.ptab_miss_rate           0.0000 # first level page table miss rate

